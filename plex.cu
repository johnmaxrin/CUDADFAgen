// Auto generated lexical analyser for MA14
#include<stdio.h>

enum
{
	NONE,
	APE,
	APPLE,
	IRO,
	BOOL,
	FLOAT,
	GRAPH,
	OIL,
	ZEBRA
};

static int dfaTable[41][13] = {
	{27, -1, 10, -1, 1, 24, 7, -1, 19, -1, -1, 14, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1},
	{-1, 3, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, 5, -1, -1, -1, -1, -1},
	{-1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, 9, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, 11, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, 12, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, 16, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, 17, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 18},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, 21, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, 22, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 23, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, 25, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, 26, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, 29, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, 30, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, 31, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},

};

static int outputArray[50] = {
	0, 0, 0, 1, 0, 
	0, 2, 0, 0, 3, 
	0, 0, 0, 4, 0, 
	0, 0, 0, 5, 0, 
	0, 0, 0, 6, 0, 
	0, 7, 0, 0, 0, 
	0, 8, 0, 0, 0, 
	0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 
	
};

static int alpArray[26] = {
	4, 2, -1, -1, 1, 
	11, 8, 10, 6, -1, 
	-1, 7, -1, -1, 5, 
	9, -1, 3, -1, 12, 
	-1, -1, -1, -1, -1, 
	0, 
};


int main()
{
	char test[50];
	printf("Enter a keyword: ");
	scanf("%s",test);
	int cstate = 0;
	for(int i=0; test[i] != '\0'; ++i)
	{
		int ch = alpArray[test[i]-'a'];
		cstate = dfaTable[cstate][ch];
	}
	printf("\nThis is:%d\n",outputArray[cstate]);
	return 0;
}
